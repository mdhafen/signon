<?php
global $config;

global $GOOGLE_DOMAIN;
global $GOOGLE_A_CLIENT,$GOOGLE_S_CLIENT;
$GOOGLE_DOMAIN = 'washk12.org';
$GOOGLE_A_CLIENT = '';
$GOOGLE_S_CLIENT = '';

global $GV_EMAIL, $GV_PASSWD, $GV_PHONE, $GV_MESSAGE, $PROVIDER_MAP;
$GV_EMAIL = '';
$GV_PASSWD = '';
$GV_PHONE = '';
$GV_MESSAGE = "Your login for WCSDaccess follows, username: {{USERNAME}} password: {{PASSWORD}} Please don't reply, for help contact a WCSD Tech.";
$PROVIDER_MAP = array(
  'Verizon' => 'vtext.com',
  'Sprint' => 'messaging.sprintpcs.com',
  'Alltel' => 'sms.alltelwireless.com',
  'ATT' => 'txt.att.net',
  'T-Mobile' => 'tmomail.net',
  'US Cellular' => 'email.uscc.net',
  'Virgin Mobile' => 'vmobl.com',
  'Cingular' => 'cingularme.com',
//  'Cricket' => 'sms.mycricket.com', // Cricket gave an SPF fail for me.
  'Metro PCS' => 'MyMetroPcs.com',
  'Powertel' => 'ptel.net',
  'SunCom' => 'tms.suncom.com',
  'Tracfone' => 'mmst5.tracfone.com',
  'Consumer Cellular' => 'cingularme.com',
  'Straight Talk' => 'vtext.com',
  'Nextel' => 'page.nextel.com',
                      );

set_include_path( get_include_path() . PATH_SEPARATOR . $config['base_dir'].'/inc/Google_Client' );
require_once "Google/autoload.php";
require_once 'XML/Unserializer.php';
include_once 'google_functions_directory.php';

global $GOOGLE_CLIENT_SCOPES,$GOOGLE_SERVICE_SCOPES;
$GOOGLE_CLIENT_SCOPES = array('https://www.googleapis.com/auth/admin.directory.user','https://www.googleapis.com/auth/admin.directory.group https://www.googleapis.com/auth/userinfo.email');
$GOOGLE_SERVICE_SCOPES = array('https://www.googleapis.com/auth/admin.directory.user','https://www.googleapis.com/auth/admin.directory.group');
$GOOGLE_CLIENT_CONFIG_FILE = '/var/www/signon/inc/client_secret.json';
$GOOGLE_A_CLIENT = new Google_Client();
if ( method_exists( $GOOGLE_A_CLIENT, 'setAuthConfigFile' ) ) {
  $GOOGLE_A_CLIENT->setAuthConfigFile( $GOOGLE_CLIENT_CONFIG_FILE );
}
else {
  $client_config = file_get_contents( $GOOGLE_CLIENT_CONFIG_FILE );
  $client_config = json_decode( $client_config, true );
  $GOOGLE_A_CLIENT->setClientId( $client_config['web']['client_id'] );
  $GOOGLE_A_CLIENT->setClientSecret( $client_config['web']['client_secret'] );
}
$GOOGLE_A_CLIENT->setAccessType('online');
$GOOGLE_A_CLIENT->setApprovalPrompt('auto');
$GOOGLE_A_CLIENT->setScopes( $GOOGLE_CLIENT_SCOPES );
$GOOGLE_A_CLIENT->setRedirectUri($config['base_url'] .'change_password.php');
$GOOGLE_A_CLIENT->setApplicationName( $config['site_title'] );

global $SERVICE_ACCOUNT_EMAIL,$SERVICE_ACCOUNT_ID,$SERVICE_ACCOUNT_PKCS12_FILE_PATH;
$SERVICE_ACCOUNT_EMAIL = 'apiaccess@washk12.org';
$SERVICE_ACCOUNT_ID = '785115890023@developer.gserviceaccount.com';
$SERVICE_ACCOUNT_PKCS12_FILE_PATH = '/var/www/signon/inc/WCSD_Drive_API-privatekey.p12';
$GOOGLE_S_CLIENT = buildService( $SERVICE_ACCOUNT_EMAIL, $SERVICE_ACCOUNT_ID, $SERVICE_ACCOUNT_PKCS12_FILE_PATH, $GOOGLE_SERVICE_SCOPES );
$GOOGLE_S_CLIENT->setScopes( $GOOGLE_SERVICE_SCOPES );
$GOOGLE_S_CLIENT->setRedirectUri($config['base_url'] .'change_password.php');
$GOOGLE_S_CLIENT->setApplicationName( $config['site_title'] );
if ( $GOOGLE_S_CLIENT->getAuth()->isAccessTokenExpired() ) {
  $GOOGLE_S_CLIENT->getAuth()->refreshTokenWithAssertion();
}

$OTHER_TITLES = array(
'Extra Duty',
'SRO',
'school board',
'FIRST AID/CPR INSTRUCTOR',
'sweeper',
);

global $LDAP_BASE,$LOCATIONS,$OTHER_TITLES,$DEFAULT_LOCATION,$DEFAULT_OU;
$LDAP_BASE = 'dc=wcsd';
$DEFAULT_OU = 'ou=District Departments,'.$LDAP_BASE;
$DEFAULT_LOCATION =   array(
    'init' => 'washk12',
    'ou'   => 'ou=District Departments,'.$LDAP_BASE,
    'num'  => 950,
  );

$LOCATIONS = array(
  array(
    'init' => 'AES',
    'ou'   => 'ou=Arrowhead Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 111,
  ),
  array(
    'init' => 'BES',
    'ou'   => 'ou=Bloomington Elementary,ou=Elementaries,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 102,
  ),
  array(
    'init' => 'BHES',
    'ou'   => 'ou=Bloomington Hills Elementary,ou=Elementaries,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 105,
  ),
  array(
    'init' => 'CLF',
    'ou'   => 'ou=Coral Cliffs Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 110,
  ),
  array(
    'init' => 'CYN',
    'ou'   => 'ou=Coral Canyon Elementary,ou=Elementaries,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 107,
  ),
  array(
    'init' => 'CVES',
    'ou'   => 'ou=Crimson View Elementary,ou=Elementaries,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 147,
  ),
  array(
    'init' => 'DHHS',
    'ou'   => 'ou=Desert Hills High,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 703,
  ),
  array(
    'init' => 'DHMS',
    'ou'   => 'ou=Desert Hills Middle,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 403,
  ),
  array(
    'init' => 'DVES',
    'ou'   => 'ou=Diamond Valley Elementary,ou=Elementaries,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 108,
  ),
  array(
    'init' => 'DHS',
    'ou'   => 'ou=Dixie High,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 704,
  ),
  array(
    'init' => 'DMS',
    'ou'   => 'ou=Dixie Middle,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 404,
  ),
  array(
    'init' => 'DSES',
    'ou'   => 'ou=Dixie Sun Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 103,
  ),
  array(
    'init' => 'EAST',
    'ou'   => 'ou=East Elementary,ou=Elementaries,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 116,
  ),
  array(
    'init' => 'EES',
    'ou'   => 'ou=Enterprise Elementary,ou=Enterprise Cone,'.$LDAP_BASE,
    'num'  => 104,
  ),
  array(
    'init' => 'EHS',
    'ou'   => 'ou=Enterprise High,ou=Enterprise Cone,'.$LDAP_BASE,
    'num'  => 712,
  ),
  array(
    'init' => 'FRIS',
    'ou'   => 'ou=Fossil Ridge Intermediate,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 320,
  ),
  array(
    'init' => 'HTES',
    'ou'   => 'ou=Heritage Elementary,ou=Elementaries,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 120,
  ),
  array(
    'init' => 'HRZ',
    'ou'   => 'ou=Horizon Elementary,ou=Elementaries,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 145,
  ),
  array(
    'init' => 'HES',
    'ou'   => 'ou=Hurricane Elementary,ou=Elementaries,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 112,
  ),
  array(
    'init' => 'HHS',
    'ou'   => 'ou=Hurricane High,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 716,
  ),
  array(
    'init' => 'HIS',
    'ou'   => 'ou=Hurricane Intermediate,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 308,
  ),
  array(
    'init' => 'HMS',
    'ou'   => 'ou=Hurricane Middle,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 408,
  ),
  array(
    'init' => 'LVK',
    'ou'   => 'ou=La Verkin Elementary,ou=Elementaries,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 114,
  ),
  array(
    'init' => 'LRIS',
    'ou'   => 'ou=Lava Ridge Intermediate,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 325,
  ),
  array(
    'init' => 'LTV',
    'ou'   => 'ou=Little Valley Elementary,ou=Elementaries,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 146,
  ),
  array(
    'init' => 'MHS',
    'ou'   => 'ou=Millcreek High,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 718,
  ),
  array(
    'init' => 'PES',
    'ou'   => 'ou=Panorama Elementary,ou=Elementaries,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 121,
  ),
  array(
    'init' => 'PVHS',
    'ou'   => 'ou=Pine View High,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 720,
  ),
  array(
    'init' => 'PVMS',
    'ou'   => 'ou=Pine View Middle,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 420,
  ),
  array(
    'init' => 'POST',
    'ou'   => 'ou=Post High,'.$LDAP_BASE,
    'num'  => 940,
  ),
  array(
    'init' => 'RMES',
    'ou'   => 'ou=Red Mountain Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 123,
  ),
  array(
    'init' => 'RES',
    'ou'   => 'ou=Riverside Elementary,ou=Elementaries,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 144,
  ),
  array(
    'init' => 'SNDS',
    'ou'   => 'ou=Sandstone Elementary,ou=Elementaries,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 122,
  ),
  array(
    'init' => 'SCES',
    'ou'   => 'ou=Santa Clara Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 124,
  ),
  array(
    'init' => 'SCHS',
    'ou'   => 'ou=Snow Canyon High,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 725,
  ),
  array(
    'init' => 'SCMS',
    'ou'   => 'ou=Snow Canyon Middle,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 425,
  ),
  array(
    'init' => 'SHS',
    'ou'   => 'ou=SouthWest,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 850,
  ),
  array(
    'init' => 'SES',
    'ou'   => 'ou=Springdale Elementary,ou=Elementaries,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 128,
  ),
  array(
    'init' => 'SRIS',
    'ou'   => 'ou=Sunrise Ridge Intermediate,ou=Desert Hills Cone,'.$LDAP_BASE,
    'num'  => 303,
  ),
  array(
    'init' => 'SSES',
    'ou'   => 'ou=Sunset Elementary,ou=Elementaries,ou=Snow Cone,'.$LDAP_BASE,
    'num'  => 130,
  ),
  array(
    'init' => 'TFES',
    'ou'   => 'ou=Three Falls Elementary,ou=Elementaries,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 134,
  ),
  array(
    'init' => 'TIS',
    'ou'   => 'ou=Tonaquint Intermediate,ou=Dixie Cone,'.$LDAP_BASE,
    'num'  => 304,
  ),
  array(
    'init' => 'WES',
    'ou'   => 'ou=Washington Elementary,ou=Elementaries,ou=Pine Cone,'.$LDAP_BASE,
    'num'  => 140,
  ),
  array(
    'init' => 'WCS',
    'ou'   => 'ou=Water Canyon School,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 118,
  ),
  array(
    'init' => 'WCHS',
    'ou'   => 'ou=Water Canyon High School,ou=Hurricane Cone,'.$LDAP_BASE,
    'num'  => 518,
  ),
  array(
    'init' => 'WOS',
    'ou'   => 'ou=Washington Online,ou=District Departments,'.$LDAP_BASE,
    'num'  => 200,
  ),
  array(
    'init' => 'UOHS',
    'ou'   => 'ou=Utah Online High School,ou=District Departments,'.$LDAP_BASE,
    'num'  => 500
  ),
  array(
    'init' => 'ZMD',
    'ou'   => 'ou=Maintenance,ou=District Departments,'.$LDAP_BASE,
    'num'  => 810,
  ),
  array(
    'init' => 'ZTD',
    'ou'   => 'ou=Transportation,ou=District Departments,'.$LDAP_BASE,
    'num'  => 800,
  ),
  array(
    'init' => 'ZTECH',
    'ou'   => 'ou=Technology,'.$LDAP_BASE,
    'num'  => 820,
  ),
  array(
    'init' => 'ZWCN',
    'ou'   => 'ou=Food Services,ou=District Departments,'.$LDAP_BASE,
    'num'  => 960,
  ),
  array(
    'init' => 'ZSpEd',
    'ou'   => 'ou=Special Education,ou=District Departments,'.$LDAP_BASE,
    'num'  => 920
  ),
  array(
    'init' => 'washk12',
    'ou'   => 'ou=District Departments,'.$LDAP_BASE,
    'num'  => 950,
  ),
		   );

function google_oauth_signout() {
  global $GOOGLE_A_CLIENT;

  $GOOGLE_A_CLIENT->revokeToken();
  unset( $_SESSION['google_oauth_token'] );
}

function auth_to_google( $redirect = null ) {
  global $GOOGLE_A_CLIENT;
  /* no workie
     $request = $GOOGLE_S_CLIENT->getIo()->authenticatedRequest(
        new Google_HttpRequest(
        // Google_OAuth2::OAUTH2_TOKEN_URI, 'POST', array(), array(
        Google_OAuth2::OAUTH2_AUTH_URL, 'POST', array(), array(
                'grant_type' => 'password',
                'username' => $email,
                'password' => $password,
                // 'scope' => 'openid email',
        )));

  */

  /* IMAP is now a dead-end with gmail
  $hostname = '{imap.gmail.com:993/imap/ssl/novalidate-cert}[Gmail]/All Mail';

  // imap_open(host,user,pass,options,n_retries)
  $inbox = @imap_open( $hostname, $email, $password, 0, 1 );

  if ( $inbox ) {
    imap_close( $inbox );
  }

  return $inbox;
  */

  $g_code = input( 'code', INPUT_STR );
  if ( !empty($redirect) ) {
    $GOOGLE_A_CLIENT->setRedirectUri( $redirect );
  }

  if ( !empty($g_code) ) {
    unset( $_SESSION['google_oauth_token'] );
    $g_oauth = new Google_Service_Oauth2( $GOOGLE_A_CLIENT );
    $ticket = "";
    try {
      $ticket = $GOOGLE_A_CLIENT->authenticate($g_code);
    }
    catch ( Google_Auth_Exception $e ) {
      $msg = $e->getMessage();
      $restart = 0;
      if ( stripos($msg,'invalid code') ||
           stripos($msg,'code was already redeemed') ) {
        $restart = 1;
      }
      if ( $restart && !empty($redirect) ) {
        $GOOGLE_A_CLIENT->setRedirectUri( $redirect );
        $auth_url = $GOOGLE_A_CLIENT->createAuthUrl();
        redirect( $auth_url );
        exit;
      }
      throw $e;
    }

    if ( !empty($ticket) ) {
      $_SESSION['google_oauth_token'] = $ticket;
      $data = $g_oauth->userinfo->get();
    }
  }
  else if ( !empty($_SESSION['google_oauth_token']) ) {
    $g_oauth = new Google_Service_Oauth2( $GOOGLE_A_CLIENT );
    $GOOGLE_A_CLIENT->setAccessToken( $_SESSION['google_oauth_token'] );
    $data = $g_oauth->userinfo->get();
  }
  else if ( !empty($redirect) ) {
    $GOOGLE_A_CLIENT->setRedirectUri( $redirect );
    $auth_url = $GOOGLE_A_CLIENT->createAuthUrl();
    redirect( $auth_url );
    exit;
  }

  if ( !empty($data) ) {
    return $data;
  }
  else {
    return false;
  }
}

function get_user_google( $email ) {
  global $GOOGLE_S_CLIENT;

  $user = getUser( $GOOGLE_S_CLIENT, $email );
  $user = json_decode($user, true);

  return $user;
}

function google_get_all_users() {
    global $GOOGLE_S_CLIENT;
    $pageToken = null;
    $google_cache = array();
    do {
        $cache = getAllUsers( $GOOGLE_S_CLIENT, '', $pageToken );
        $cache = json_decode( $cache, true );
        if ( !empty($cache['users']) ) {
            foreach ( $cache['users'] as $user ) {
                if ( empty($user['suspended']) || $user['suspended'] == false ) {
                  $google_cache[] = $user;
                }
            }
        }
        if ( !empty($cache['nextPageToken']) ) {
            $pageToken = $cache['nextPageToken'];
        }
        else {
            $pageToken = null;
        }
    } while ( $pageToken );
    return $google_cache;
}

function google_org_to_loc( $path ) {
  global $LOCATIONS,$DEFAULT_LOCATION;

  $ous = explode( '/', $path );
  $ous = array_filter( $ous );
  $ous = array_reverse( $ous );

  foreach ( $ous as $ou ) {
    foreach ( $LOCATIONS as $location ) {
      if ( stripos($location['ou'],$ou) == 3 ) {
        return $location;
      }
    }
  }

  return $DEFAULT_LOCATION;
}

function google_org_to_ou( $path ) {
  global $LDAP_BASE,$DEFAULT_OU;

  $dn = '';
  $paths = explode( '/', $path );
  $paths = array_filter( $paths );
  if ( !empty($paths) ) {
    $paths = array_reverse($paths);
    foreach ( $paths as $ou ) {
      $dn .= 'ou='. $ou .',';
    }
    return $dn.$LDAP_BASE;
  }
  return $DEFAULT_OU;
}

function google_user_hash_for_ldap( $user ) {
  global $OTHER_TITLES;
  $entry = array();

  if ( !empty($user) ) {
    if ( stripos($user['orgUnitPath'],'student') !== FALSE ) {
      $entry['employeeType'] = 'Student';
    }
    else {
      $entry['employeeType'] = 'Staff';
    }

    if ( !empty($entry['employeeType']) ) {
      $entry['uid'] = strtolower(substr($user['primaryEmail'],0,strpos($user['primaryEmail'],'@')));
      $entry['sn'] = $user['name']['familyName'];
      $entry['givenName'] = $user['name']['givenName'];
      $entry['cn'] = $user['name']['fullName'];
      $entry['mail'] = strtolower($user['primaryEmail']);
      if ( !empty($user['organizations']) ) {
        foreach ( $user['organizations'] as $org ) {
          if ( !empty($org['title']) ) {
            $entry['title'] = $org['title'];
          }
        }
      }
      if ( !empty($user['externalIds']) ) {
        foreach ( $user['externalIds'] as $xid ) {
          if ( $xid['type'] == 'organization' ) {
            $entry['employeeNumber'] = $xid['value'];
          }
        }
      }
      if ( !empty($user['customSchemas']['Contact_Information']) ) {
        $ci=$user['customSchemas']['Contact_Information'];
        if ( !empty($ci['Street_Address'] )) {
          $entry['street'] = $ci['Street_Address'];
        }
        if ( !empty($ci['Zipcode'] )) {
          $entry['postalCode'] = $ci['Zipcode'];
        }
        if ( !empty($ci['DOB'] )) {
          $entry['destinationIndicator'] = $ci['DOB'];
        }
        if ( !empty($ci['School_Number'] )) {
          $entry['departmentNumber'] = $ci['School_Number'];
        }
        if ( !empty($ci['School_Abbreviation'] )) {
          $entry['o'] = $ci['School_Abbreviation'];
        }
        if ( !empty($ci['Guardian_Email'] )) {
          $entry['labeledURI'] = $ci['Guardian_Email'];
        }
        if ( !empty($ci['City'] )) {
          $entry['l'] = $ci['City'];
        }
        if ( !empty($ci['State'] )) {
          $entry['st'] = $ci['State'];
        }
      }
      if ( empty($entry['title']) || in_array( strtolower($entry['title']), array_map('strtolower',$OTHER_TITLES) ) ) {
        $entry['employeeType'] = 'Other';
      }
      $loc = google_org_to_loc( $user['orgUnitPath'] );
      $entry['o'] = $loc['init'];
      $entry['departmentNumber'] = $loc['num'];
      $entry['description'] = $entry['o'] ."-". $entry['employeeType'];
      $ou = google_org_to_ou( $user['orgUnitPath'] );
      if ( !empty($ou) && !empty($entry['uid']) ) {
        $entry['dn'] = 'uid='. ldap_escape($entry['uid'],'',LDAP_ESCAPE_DN) .','. $ou;
      }
    }
  }
  return $entry;
}

function google_send_password( $phone, $provider, $password ) {
  global $GV_EMAIL, $GV_PASSWD, $GV_PHONE, $GV_MESSAGE, $PROVIDER_MAP;
  if ( empty($phone) || empty($password) ) {
    return 0;
  }

  $message = $GV_MESSAGE;
  $message = str_replace( '{{USERNAME}}', $phone, $message );
  $message = str_replace( '{{PASSWORD}}', $password, $message );

  $phone = preg_replace( '/\D/', "", $phone );
  if ( strlen( $phone ) < 10 ) {
    return 0;
  }

  $sent = 0;
  if ( !empty($PROVIDER_MAP[$provider]) ) {
    $to = $phone .'@'. $PROVIDER_MAP[$provider];
    $from = ( empty($GV_PHONE) ? $GV_EMAIL : $GV_PHONE );
    $subject = 'WCSD';

    $message = wordwrap( $message, 70, "\r\n" );
    $headers = 'From: '. $from ."\r\n";
    $headers .= 'Reply-To: '. $from ."\r\n";
    $headers .= 'Date: '. date(DATE_RFC2822) ."\r\n";
    if ( mail( $to, $subject, $message, $headers, "-f$from" ) ) {
      $sent = 1;
    }
  }
  if ( ! $sent ) {
    include_once('GoogleVoice.php');

    $gv = new GoogleVoice( $GV_EMAIL, $GV_PASSWD );
    $gv->sendSMS( $phone, $message );
  }

  return 1;
}

function google_set_password( $email, $password ) {
  global $GOOGLE_S_CLIENT,$GOOGLE_A_CLIENT;
  $result = 0;

  if ( empty($email) || empty($password) ) {
    return 0;
  }

  $mod = '{
"password":"'. $password .'",
"changePasswordAtNextLogin":"0"
}';

  $result = updateUser( $GOOGLE_S_CLIENT, $email, $mod );

  return $result;
}

?>
